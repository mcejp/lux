# GENERATED CODE, DO NOT EDIT BY HAND

from aurora import *
from uxn_isa import *

UCODE = {
    (OP_ADD & 0x1f): [
        UI_POP_BS,
        UI_POP_AS,
        UI_ALU(ALU_OP_ADD),
        UI_PUSH_ALU_S,
    ],
    (OP_ADD & 0x1f) | OMODE_S: [
        UI_POP_BS,
        UI_POP_AS,
        UI_ALU(ALU_OP_ADD),
        UI_PUSH_ALU_S,
    ],
    (OP_AND & 0x1f): [
        UI_POP_BS,
        UI_POP_AS,
        UI_ALU(ALU_OP_AND),
        UI_PUSH_ALU_S,
    ],
    (OP_AND & 0x1f) | OMODE_S: [
        UI_POP_BS,
        UI_POP_AS,
        UI_ALU(ALU_OP_AND),
        UI_PUSH_ALU_S,
    ],
    (OP_DEO & 0x1f): [
        UI_POP_A_U8,
        UI_POP_BS,
        Ui(mem_op=MEM_ST_BL_AT_A, mem_sp=MEM_SP_DEV),
    ],
    (OP_DEO & 0x1f) | OMODE_S: [
        UI_POP_A_U8,
        UI_POP_BS | UI_ALU_A_PLUS_1,
        Ui(mem_op=MEM_ST_BH_AT_A, mem_sp=MEM_SP_DEV) | UI_ALU_TO_A,
        Ui(mem_op=MEM_ST_BL_AT_A, mem_sp=MEM_SP_DEV),
    ],
    (OP_DEI & 0x1f): [
        UI_POP_A_U8,
        Ui(mem_op=MEM_LD_AT_A, mem_sp=MEM_SP_DEV),
        UI_MEM_TO_BL,
        UI_PUSH_BS,
    ],
    (OP_DEI & 0x1f) | OMODE_S: [
        UI_POP_A_U8,
        Ui(mem_op=MEM_LD_AT_A, mem_sp=MEM_SP_DEV),
        UI_MEM_TO_BH | UI_ALU_A_PLUS_1,
        UI_ALU_TO_A,
        Ui(mem_op=MEM_LD_AT_A, mem_sp=MEM_SP_DEV),
        UI_MEM_TO_BL,
        UI_PUSH_BS,
    ],
    (OP_DIV & 0x1f): [
        UI_RPUSH_PC_W,
        Ui(pc_op=PC_WARP_DVEC_S),
    ],
    (OP_DIV & 0x1f) | OMODE_S: [
        UI_RPUSH_PC_W,
        Ui(pc_op=PC_WARP_DVEC_S),
    ],
    (OP_DUP & 0x1f): [
        UI_POP_AS,
        UI_PUSH_AS,
        UI_PUSH_AS,
    ],
    (OP_DUP & 0x1f) | OMODE_S: [
        UI_POP_AS,
        UI_PUSH_AS,
        UI_PUSH_AS,
    ],
    (OP_EOR & 0x1f): [
        UI_POP_BS,
        UI_POP_AS,
        UI_ALU(ALU_OP_EOR),
        UI_PUSH_ALU_S,
    ],
    (OP_EOR & 0x1f) | OMODE_S: [
        UI_POP_BS,
        UI_POP_AS,
        UI_ALU(ALU_OP_EOR),
        UI_PUSH_ALU_S,
    ],
    (OP_EQU & 0x1f): [
        UI_POP_BS,
        UI_POP_AS,
        UI_ALU(ALU_OP_EQU),
        UI_PUSH_ALU_L,
    ],
    (OP_EQU & 0x1f) | OMODE_S: [
        UI_POP_BS,
        UI_POP_AS,
        UI_ALU(ALU_OP_EQU),
        UI_PUSH_ALU_L,
    ],
    (OP_GTH & 0x1f): [
        UI_POP_BS,
        UI_POP_AS,
        UI_ALU(ALU_OP_GTH),
        UI_PUSH_ALU_L,
    ],
    (OP_GTH & 0x1f) | OMODE_S: [
        UI_POP_BS,
        UI_POP_AS,
        UI_ALU(ALU_OP_GTH),
        UI_PUSH_ALU_L,
    ],
    (OP_INC & 0x1f): [
        UI_POP_AS,
        UI_ALU_A_PLUS_1,
        UI_PUSH_ALU_S,
    ],
    (OP_INC & 0x1f) | OMODE_S: [
        UI_POP_AS,
        UI_ALU_A_PLUS_1,
        UI_PUSH_ALU_S,
    ],
    (OP_JCN & 0x1f): [
        UI_POP_A_S8,
        UI_POP_BS | UI_ALU_PC_PLUS_A,
        Ui(pc_op=PC_WARP_ALU_IF_BL_NONZERO),
    ],
    (OP_JCN & 0x1f) | OMODE_S: [
        UI_POP_AS,
        UI_POP_B_U8 | Ui(alu_op=ALU_OP_PASS_OP0, alu_sel0=ALU_SEL0_A, alu_sel1=ALU_SEL1_X),
        Ui(pc_op=PC_WARP_ALU_IF_BL_NONZERO),
    ],
    (OP_JMP & 0x1f): [
        UI_POP_A_S8,
        UI_ALU_PC_PLUS_A,
        Ui(pc_op=PC_WARP_ALU),
    ],
    (OP_JMP & 0x1f) | OMODE_S: [
        UI_POP_AS,
        Ui(alu_op=ALU_OP_PASS_OP0, alu_sel0=ALU_SEL0_A, alu_sel1=ALU_SEL1_X),
        Ui(pc_op=PC_WARP_ALU),
    ],
    (OP_JSR & 0x1f): [
        UI_POP_A_S8,
        UI_RPUSH_PC_W,
        UI_ALU_PC_PLUS_A,
        Ui(pc_op=PC_WARP_ALU),
    ],
    (OP_JSR & 0x1f) | OMODE_S: [
        UI_POP_AS,
        UI_RPUSH_PC_W,
        Ui(alu_op=ALU_OP_PASS_OP0, alu_sel0=ALU_SEL0_A, alu_sel1=ALU_SEL1_X),
        Ui(pc_op=PC_WARP_ALU),
    ],
    (OP_LDA & 0x1f): [
        UI_POP_AW,
        Ui(mem_op=MEM_LD_AT_A, mem_sp=MEM_SP_RAM),
        UI_MEM_TO_BL,
        UI_PUSH_BS,
    ],
    (OP_LDA & 0x1f) | OMODE_S: [
        UI_POP_AW,
        Ui(mem_op=MEM_LD_AT_A, mem_sp=MEM_SP_RAM),
        UI_MEM_TO_BH | UI_ALU_A_PLUS_1,
        UI_ALU_TO_A,
        Ui(mem_op=MEM_LD_AT_A, mem_sp=MEM_SP_RAM),
        UI_MEM_TO_BL,
        UI_PUSH_BS,
    ],
    (OP_LDR & 0x1f): [
        UI_POP_A_S8,
        UI_ALU_PC_PLUS_A,
        UI_ALU_TO_A,
        Ui(mem_op=MEM_LD_AT_A, mem_sp=MEM_SP_RAM),
        UI_MEM_TO_BL,
        UI_PUSH_BS,
    ],
    (OP_LDR & 0x1f) | OMODE_S: [
        UI_POP_A_S8,
        UI_ALU_PC_PLUS_A,
        UI_ALU_TO_A,
        Ui(mem_op=MEM_LD_AT_A, mem_sp=MEM_SP_RAM),
        UI_MEM_TO_BH | UI_ALU_A_PLUS_1,
        UI_ALU_TO_A,
        Ui(mem_op=MEM_LD_AT_A, mem_sp=MEM_SP_RAM),
        UI_MEM_TO_BL,
        UI_PUSH_BS,
    ],
    (OP_LDZ & 0x1f): [
        UI_POP_A_U8,
        Ui(mem_op=MEM_LD_AT_A, mem_sp=MEM_SP_RAM),
        UI_MEM_TO_BL,
        UI_PUSH_BS,
    ],
    (OP_LDZ & 0x1f) | OMODE_S: [
        UI_POP_A_U8,
        Ui(mem_op=MEM_LD_AT_A, mem_sp=MEM_SP_RAM),
        UI_MEM_TO_BH | UI_ALU_A_PLUS_1,
        UI_ALU_TO_A,
        Ui(mem_op=MEM_LD_AT_A, mem_sp=MEM_SP_RAM),
        UI_MEM_TO_BL,
        UI_PUSH_BS,
    ],
    (OP_LIT & 0x1f): [
        Ui(mem_op=MEM_LD_AT_PC, mem_sp=MEM_SP_RAM) | Ui(pc_op=PC_INCR),
        UI_MEM_TO_A_U8,
        UI_PUSH_AS,
    ],
    (OP_LIT & 0x1f) | OMODE_S: [
        Ui(mem_op=MEM_LD_AT_PC, mem_sp=MEM_SP_RAM) | Ui(pc_op=PC_INCR),
        UI_MEM_TO_AH,
        Ui(mem_op=MEM_LD_AT_PC, mem_sp=MEM_SP_RAM) | Ui(pc_op=PC_INCR),
        UI_MEM_TO_AL,
        UI_PUSH_AS,
    ],
    (OP_LTH & 0x1f): [
        UI_POP_BS,
        UI_POP_AS,
        UI_ALU(ALU_OP_LTH),
        UI_PUSH_ALU_L,
    ],
    (OP_LTH & 0x1f) | OMODE_S: [
        UI_POP_BS,
        UI_POP_AS,
        UI_ALU(ALU_OP_LTH),
        UI_PUSH_ALU_L,
    ],
    (OP_MUL & 0x1f): [
        UI_POP_BS,
        UI_POP_AS,
        UI_ALU(ALU_OP_MUL),
        UI_PUSH_ALU_S,
    ],
    (OP_MUL & 0x1f) | OMODE_S: [
        UI_POP_BS,
        UI_POP_AS,
        UI_ALU(ALU_OP_MUL),
        UI_PUSH_ALU_S,
    ],
    (OP_NEQ & 0x1f): [
        UI_POP_BS,
        UI_POP_AS,
        UI_ALU(ALU_OP_NEQ),
        UI_PUSH_ALU_L,
    ],
    (OP_NEQ & 0x1f) | OMODE_S: [
        UI_POP_BS,
        UI_POP_AS,
        UI_ALU(ALU_OP_NEQ),
        UI_PUSH_ALU_L,
    ],
    (OP_NIP & 0x1f): [
        UI_POP_AS,
        UI_POP_S,
        UI_PUSH_AS,
    ],
    (OP_NIP & 0x1f) | OMODE_S: [
        UI_POP_AS,
        UI_POP_S,
        UI_PUSH_AS,
    ],
    (OP_ORA & 0x1f): [
        UI_POP_BS,
        UI_POP_AS,
        UI_ALU(ALU_OP_ORA),
        UI_PUSH_ALU_S,
    ],
    (OP_ORA & 0x1f) | OMODE_S: [
        UI_POP_BS,
        UI_POP_AS,
        UI_ALU(ALU_OP_ORA),
        UI_PUSH_ALU_S,
    ],
    (OP_OVR & 0x1f): [
        UI_POP_AS,
        UI_POP_BS,
        UI_PUSH_BS,
        UI_PUSH_AS,
        UI_PUSH_BS,
    ],
    (OP_OVR & 0x1f) | OMODE_S: [
        UI_POP_AS,
        UI_POP_BS,
        UI_PUSH_BS,
        UI_PUSH_AS,
        UI_PUSH_BS,
    ],
    (OP_POP & 0x1f): [
        UI_POP_S,
    ],
    (OP_POP & 0x1f) | OMODE_S: [
        UI_POP_S,
    ],
    (OP_ROT & 0x1f): [
        UI_POP_AS,
        UI_POP_BS,
        UI_POP_CS,
        UI_PUSH_BS,
        UI_PUSH_AS,
        UI_PUSH_CS,
    ],
    (OP_ROT & 0x1f) | OMODE_S: [
        UI_POP_AS,
        UI_POP_BS,
        UI_POP_CS,
        UI_PUSH_BS,
        UI_PUSH_AS,
        UI_PUSH_CS,
    ],
    (OP_SFT & 0x1f): [
        UI_POP_B_U8,
        UI_POP_AS,
        UI_ALU(ALU_OP_SFT),
        UI_PUSH_ALU_S,
    ],
    (OP_SFT & 0x1f) | OMODE_S: [
        UI_POP_B_U8,
        UI_POP_AS,
        UI_ALU(ALU_OP_SFT),
        UI_PUSH_ALU_S,
    ],
    (OP_STA & 0x1f): [
        UI_POP_AW,
        UI_POP_BS,
        Ui(mem_op=MEM_ST_BL_AT_A, mem_sp=MEM_SP_RAM),
    ],
    (OP_STA & 0x1f) | OMODE_S: [
        UI_POP_AW,
        UI_POP_BS | UI_ALU_A_PLUS_1,
        Ui(mem_op=MEM_ST_BH_AT_A, mem_sp=MEM_SP_RAM) | UI_ALU_TO_A,
        Ui(mem_op=MEM_ST_BL_AT_A, mem_sp=MEM_SP_RAM),
    ],
    (OP_STH & 0x1f): [
        UI_POP_AS,
        UI_RPUSH_AS,
    ],
    (OP_STH & 0x1f) | OMODE_S: [
        UI_POP_AS,
        UI_RPUSH_AS,
    ],
    (OP_STR & 0x1f): [
        UI_POP_A_S8,
        UI_POP_BS | UI_ALU_PC_PLUS_A,
        UI_ALU_TO_A,
        Ui(mem_op=MEM_ST_BL_AT_A, mem_sp=MEM_SP_RAM),
    ],
    (OP_STR & 0x1f) | OMODE_S: [
        UI_POP_A_S8,
        UI_POP_BS | UI_ALU_PC_PLUS_A,
        UI_ALU_TO_A,
        Ui(mem_op=MEM_ST_BH_AT_A, mem_sp=MEM_SP_RAM) | UI_ALU_A_PLUS_1,
        UI_ALU_TO_A,
        Ui(mem_op=MEM_ST_BL_AT_A, mem_sp=MEM_SP_RAM),
    ],
    (OP_STZ & 0x1f): [
        UI_POP_A_U8,
        UI_POP_BS,
        Ui(mem_op=MEM_ST_BL_AT_A, mem_sp=MEM_SP_RAM),
    ],
    (OP_STZ & 0x1f) | OMODE_S: [
        UI_POP_A_U8,
        UI_POP_BS | UI_ALU_A_PLUS_1,
        Ui(mem_op=MEM_ST_BH_AT_A, mem_sp=MEM_SP_RAM) | UI_ALU_TO_A,
        Ui(mem_op=MEM_ST_BL_AT_A, mem_sp=MEM_SP_RAM),
    ],
    (OP_SUB & 0x1f): [
        UI_POP_BS,
        UI_POP_AS,
        UI_ALU(ALU_OP_SUB),
        UI_PUSH_ALU_S,
    ],
    (OP_SUB & 0x1f) | OMODE_S: [
        UI_POP_BS,
        UI_POP_AS,
        UI_ALU(ALU_OP_SUB),
        UI_PUSH_ALU_S,
    ],
    (OP_SWP & 0x1f): [
        UI_POP_AS,
        UI_POP_BS,
        UI_PUSH_AS,
        UI_PUSH_BS,
    ],
    (OP_SWP & 0x1f) | OMODE_S: [
        UI_POP_AS,
        UI_POP_BS,
        UI_PUSH_AS,
        UI_PUSH_BS,
    ],
}
